
About Implementation
--------------------

In the text book, the implemetation of linked list stack using a header. So, the top pointer is the header->Next.

About Files
----------

- basic.h, basic include and define information
- stack.c
- stack.h
- TestLinkedStack.c
- t.sh, shell for compliing and starting up the program, as well as producing in file
- in, test data


Input
-----

The first line of input contains a positive integer N which is the number of text files to be processed. Then, the second line contains N ElementType's element. You should push them in to the stack in the given order. And, the third line contains a Positive integer M, you should do M times Pop().
 

About OptimizeImplementation
---------------------------

Although the opreations of stack is O(N), but in most of time stack is slowly. Because the drawback of this implementation is that calls to malloc and free are expensive, especially in compasion to the pointer manipulation routines.
In the text book, page 66, it gives an another way to impelement stack. Using two stacks. The second stack is initially empty. When a call is to be dropped from the first stack, it is merely placed on the second stack. Then, when new cells are needed for the first stack, the second stack is checked first.
