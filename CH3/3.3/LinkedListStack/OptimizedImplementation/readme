
About OptimizeImplementation
---------------------------

Although the opreations of stack is O(N), but in most of time stack is slowly. Because the drawback of this implementation is that calls to malloc and free are expensive, especially in compasion to the pointer manipulation routines.
In the text book, page 66, it gives an another way to impelement stack. Using two stacks. The second stack is initially empty. When a call is to be dropped from the first stack, it is merely placed on the second stack. Then, when new cells are needed for the first stack, the second stack is checked first.

About Files
----------

these files are copyed from the father directory. and made some little change.
To be exactly, just add memory management operations into stack.c, and other small change..
U can use diff command to see what has been changed. 

- basic.h, basic include and define information
- optstack.c
- optstack.h
- TestLinkedStack.c
- t.sh, shell for compliing and starting up the program, as well as producing in file
- in, test data
- outer.sh, read N&M from in.in, then start up ./t.sh
- in.in, store N & M

Input
-----

The first line of input contains a positive integer N which is the number of text files to be processed. Then, the second line contains N ElementType's element. You should push them in to the stack in the given order. And, the third line contains a Positive integer M, you should do M times Pop().
 
Be careful
----------

About the implementation of the sencond stack, when you want to add or delete a node from the second stack, you should just use malloc and free. It it directly operate with memory. 
I notice the importance of packaging, when implemementing it. I should packaging the function malloc and free, if not, I have to alter lots of codes when I want to alter the implementation of creating and deleting a node. Whitout packaging, the cost is very expensive. 

Test
----

In my basic test, just Push some node, then pop some node. This can't show the improvement of the optstack. So, to test it, I made a new directory CompareTwoALG in the father directory. Please go there.



 
