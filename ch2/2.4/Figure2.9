

/**
 * Binary Search
 * 
 * return the index of X, or -1, if X not in
 * the given list
 */


int BinarySearch( const int A[], int l, int r, int X)
{
	int Center = (l+r)/2;
	
	if (l == r)	
	{
		if (A[l] == X)
			return l;
		else 
			return -1;
	}

	if (A[Center] == X)	
		return Center;
	else if (A[Center] < X)
		return BinarySearch(A, Center+1, r, X);
	else 
		return BinarySearch(A, l, Center, X);

}


int BinarySearchIter( const int A[], int B, int N, int X)
{
	int l = B, r = N;
	while (l <= r)
	{
		int Center = (l+r)/2;
		if (A[Center] == X)
			return Center;
		else if(A[Center] > X)
			r = Center-1;
		else 
			l = Center+1;
	}

	return -1;

}


int main()
{
	int A[5] = {1, 2, 3, 4, 5};
	
	int x;

	scanf("%d", &x);
	
	printf("%d\n", BinarySearch(A, 0, N-1, x);
	printf("%d\n", BinarySearchIter(A, 0, N-1, x);

	return 0;
}






